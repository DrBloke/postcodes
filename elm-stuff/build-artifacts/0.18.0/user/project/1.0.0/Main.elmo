var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$onLinkClick = function (message) {
	var options = {stopPropagation: false, preventDefault: true};
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'click',
		options,
		_elm_lang$core$Json_Decode$succeed(message));
};
var _user$project$Main$viewLocationInfo = function (locationInfo) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(locationInfo.result.country),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$br,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_elm_lang$core$Maybe$withDefault, 'No region', locationInfo.result.region)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$page = F2(
	function (route, locationInfo) {
		var _p0 = route;
		switch (_p0.ctor) {
			case 'HomeRoute':
				return _elm_lang$html$Html$text('Home');
			case 'PostcodeRoute':
				var _p1 = locationInfo;
				switch (_p1.ctor) {
					case 'NotAsked':
						return _elm_lang$html$Html$text('Initialising.');
					case 'Loading':
						return _elm_lang$html$Html$text('Loading.');
					case 'Failure':
						return _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Error: ',
								_elm_lang$core$Basics$toString(_p1._0)));
					default:
						return _user$project$Main$viewLocationInfo(_p1._0);
				}
			default:
				return _elm_lang$html$Html$text('Not Found');
		}
	});
var _user$project$Main$initialModel = function (route) {
	return {
		route: route,
		history: {ctor: '[]'},
		locationInfo: _krisajenkins$remotedata$RemoteData$NotAsked,
		postcode: 'CB3 0FA'
	};
};
var _user$project$Main$GetDataFromWeb = {ctor: 'GetDataFromWeb'};
var _user$project$Main$ChangePostcode = function (a) {
	return {ctor: 'ChangePostcode', _0: a};
};
var _user$project$Main$LocationInfoResponse = function (a) {
	return {ctor: 'LocationInfoResponse', _0: a};
};
var _user$project$Main$getLocationInfo = function (postcode) {
	return A2(
		_elm_lang$core$Platform_Cmd$map,
		_user$project$Main$LocationInfoResponse,
		_krisajenkins$remotedata$RemoteData$sendRequest(
			A2(
				_elm_lang$http$Http$get,
				A2(_elm_lang$core$Basics_ops['++'], 'http://api.postcodes.io/postcodes/', postcode),
				_user$project$Types$decodeLocationInfo)));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		update:
		while (true) {
			var _p2 = msg;
			switch (_p2.ctor) {
				case 'ChangeLocation':
					var _p3 = _p2._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								history: {ctor: '::', _0: _p3, _1: model.history}
							}),
						_1: _elm_lang$navigation$Navigation$newUrl(_p3)
					};
				case 'OnLocationChange':
					var _p4 = _p2._0;
					var newRoute = _user$project$Router$parseLocation(_p4);
					var _v3 = _user$project$Main$GetDataFromWeb,
						_v4 = _elm_lang$core$Native_Utils.update(
						model,
						{
							route: newRoute,
							postcode: A2(
								_elm_lang$core$Maybe$withDefault,
								'',
								_elm_lang$http$Http$decodeUri(
									A2(
										_elm_lang$core$Maybe$withDefault,
										'',
										A2(_evancz$url_parser$UrlParser$parsePath, _evancz$url_parser$UrlParser$string, _p4))))
						});
					msg = _v3;
					model = _v4;
					continue update;
				case 'LocationInfoResponse':
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{locationInfo: _p2._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				case 'ChangePostcode':
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{postcode: _p2._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				default:
					return {
						ctor: '_Tuple2',
						_0: model,
						_1: _user$project$Main$getLocationInfo(model.postcode)
					};
			}
		}
	});
var _user$project$Main$OnLocationChange = function (a) {
	return {ctor: 'OnLocationChange', _0: a};
};
var _user$project$Main$init = function (location) {
	var currentRoute = _user$project$Router$parseLocation(location);
	return A2(
		_user$project$Main$update,
		_user$project$Main$OnLocationChange(location),
		_user$project$Main$initialModel(currentRoute));
};
var _user$project$Main$ChangeLocation = function (a) {
	return {ctor: 'ChangeLocation', _0: a};
};
var _user$project$Main$nav = function (postcode) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(_user$project$Router$homePath),
					_1: {
						ctor: '::',
						_0: _user$project$Main$onLinkClick(
							_user$project$Main$ChangeLocation(_user$project$Router$homePath)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Home'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(' '),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href(
								_user$project$Router$postcodePath(postcode)),
							_1: {
								ctor: '::',
								_0: _user$project$Main$onLinkClick(
									_user$project$Main$ChangeLocation(
										_user$project$Router$postcodePath(postcode))),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Postcode'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(' '),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$historyLinks = function (address) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(address),
					_1: {
						ctor: '::',
						_0: _user$project$Main$onLinkClick(
							_user$project$Main$ChangeLocation(address)),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(address),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$history = function (history) {
	return A2(_elm_lang$core$List$map, _user$project$Main$historyLinks, history);
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Postcode'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$ChangePostcode),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$value(model.postcode),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$ChangeLocation(model.postcode)),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Get info'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(_user$project$Main$page, model.route, model.locationInfo),
						_1: {
							ctor: '::',
							_0: _user$project$Main$nav(model.postcode),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$ul,
									{ctor: '[]'},
									_user$project$Main$history(model.history)),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Main$OnLocationChange,
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
